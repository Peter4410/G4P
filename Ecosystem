ArrayList<Wolf> wolves;
ArrayList<Sheep> sheeps;
Grass[][] lawn;

Map map;
Graph graph;

void setup() {
  size(1000, 700);
  colorMode(HSB, 360, 100, 100);
  map = new Map(5);
  graph = new Graph(1);

  lawn = new Grass[map.mapSize][map.mapSize];
  sheeps = new ArrayList();
  wolves = new ArrayList();
  
  //Add grass
  for (int i=0; i<map.mapSize; i++) {
    for (int j=0; j<map.mapSize; j++) {
      lawn[i][j] = new Grass();
    }
  }
  //Add sheep
  for(int i=0; i<50; i++) sheeps.add(new Sheep());
  //Add wolves
  for(int i=0; i<10; i++) wolves.add(new Wolf());
  
}

void draw() {
  background(259);

  updateWorld();
  if(frameCount%4==0)graph.update();

  graph.show();
  map.show();
}

void updateWorld() {
  for (int i=0; i<map.mapSize; i++) {
    for (int j=0; j<map.mapSize; j++) {
      lawn[i][j].update();
    }
  }
  for (Sheep s : sheeps) {
    s.update();
  }
  for (Wolf w : wolves) {
    w.update();
  }
}

/*void mousePressed() {

  if (atAddWolves()) addWolves();
  else if (atAddSheep())  addSheep();
  else if (atAddGrass())  addGrass();
}*/

void keyPressed(){
  switch(key){
    case '7' : {sheeps.add(new Sheep()); break;}
    case '4' : {sheeps.remove(0); break;}
    case '8' : {wolves.add(new Wolf()); break;}
    case '5' : {wolves.remove(0); break;}
  }
}